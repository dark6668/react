{"ast":null,"code":"var _jsxFileName = \"/home/david/repos/React/react1/src/pages/4/Main.js\",\n  _s = $RefreshSig$();\nimport React, { createElement } from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let toptext = document.querySelector(\".toptext\");\n  let bottomtext = document.querySelector(\".bottomtext\");\n  let randomMeme;\n  let [memeImg, setMemeImg] = React.useState(\"\");\n  let button = () => {\n    let momse = memesData.data.memes;\n    const randomIndex = Math.floor(Math.random());\n    const randomMeme = momse[randomIndex];\n    let img = randomMeme;\n    console.log(randomMeme);\n    setMemeImg(prevSetMemeImg => prevSetMemeImg + img.url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"toptext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"bottomtext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: memeImg,\n        alt: randomMeme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"SEOyD1hN+zA/buaUbA7yaRxEJCk=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","createElement","memesData","jsxDEV","_jsxDEV","Main","_s","toptext","document","querySelector","bottomtext","randomMeme","memeImg","setMemeImg","useState","button","momse","data","memes","randomIndex","Math","floor","random","img","console","log","prevSetMemeImg","url","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","name","_c","$RefreshReg$"],"sources":["/home/david/repos/React/react1/src/pages/4/Main.js"],"sourcesContent":["import React, { createElement } from \"react\"\nimport memesData from \"./memesData\"\n\n\nexport default function Main() {\n\n    let toptext = document.querySelector(\".toptext\")\n    let bottomtext = document.querySelector(\".bottomtext\")\n\n    let randomMeme;\n    let [memeImg, setMemeImg] = React.useState(\"\")\n\n\n    let button = () => {\n        let momse = memesData.data.memes\n\n        const randomIndex = Math.floor(Math.random())\n        const randomMeme = momse[randomIndex];\n        let img = randomMeme\n        console.log(randomMeme)\n        setMemeImg(prevSetMemeImg => prevSetMemeImg + img.url)\n\n    }\n\n\n    return (\n        <main>\n\n            <form className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"toptext\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"bottomtext\"\n                />\n            </form>\n            <div className=\"img-container\">\n                <button onClick={button}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n                <img src={memeImg} alt={randomMeme.name}></img>\n\n            </div>\n\n        </main>\n    )\n}   "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;EAChD,IAAIC,UAAU,GAAGF,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;EAEtD,IAAIE,UAAU;EACd,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;EAG9C,IAAIC,MAAM,GAAGA,CAAA,KAAM;IACf,IAAIC,KAAK,GAAGd,SAAS,CAACe,IAAI,CAACC,KAAK;IAEhC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAC;IAC7C,MAAMX,UAAU,GAAGK,KAAK,CAACG,WAAW,CAAC;IACrC,IAAII,GAAG,GAAGZ,UAAU;IACpBa,OAAO,CAACC,GAAG,CAACd,UAAU,CAAC;IACvBE,UAAU,CAACa,cAAc,IAAIA,cAAc,GAAGH,GAAG,CAACI,GAAG,CAAC;EAE1D,CAAC;EAGD,oBACIvB,OAAA;IAAAwB,QAAA,gBAEIxB,OAAA;MAAMyB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAClBxB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,eACF/B,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACP/B,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BxB,OAAA;QAAQgC,OAAO,EAAErB,MAAO;QACpBc,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT/B,OAAA;QAAKiC,GAAG,EAAEzB,OAAQ;QAAC0B,GAAG,EAAE3B,UAAU,CAAC4B;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEH;AAEf;AAAC7B,EAAA,CAhDuBD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}