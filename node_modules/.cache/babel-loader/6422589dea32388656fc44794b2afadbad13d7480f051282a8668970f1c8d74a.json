{"ast":null,"code":"var _jsxFileName = \"/home/david/repos/React/react1/src/pages/4/Main.js\",\n  _s = $RefreshSig$();\nimport React, { createElement } from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let toptext = document.querySelector(\".toptext\");\n  let bottomtext = document.querySelector(\".bottomtext\");\n  let [memeImg, setMemeImg] = React.useState(\"\");\n  let button = () => {\n    let meme = memesData;\n    console.log(meme);\n    let randomMeme = Math.floor();\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"toptext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"bottomtext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"memeImg\",\n        src: memeImg.url,\n        alt: memeImg.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"SEOyD1hN+zA/buaUbA7yaRxEJCk=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","createElement","memesData","jsxDEV","_jsxDEV","Main","_s","toptext","document","querySelector","bottomtext","memeImg","setMemeImg","useState","button","meme","console","log","randomMeme","Math","floor","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","url","alt","name","_c","$RefreshReg$"],"sources":["/home/david/repos/React/react1/src/pages/4/Main.js"],"sourcesContent":["import React, { createElement } from \"react\"\nimport memesData from \"./memesData\"\n\n\nexport default function Main() {\n\n    let toptext = document.querySelector(\".toptext\")\n    let bottomtext = document.querySelector(\".bottomtext\")\n\n\n    let [memeImg, setMemeImg] = React.useState(\"\")\n\n\n    let button = () => {\n\n        let meme = memesData\n        console.log(meme)\n        let randomMeme = Math.floor()\n\n    }\n\n    return (\n        <main>\n\n            <form className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"toptext\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"bottomtext\"\n                />\n            </form>\n            <div className=\"img-container\">\n                <button onClick={button}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n                <img className=\"memeImg\" src={memeImg.url} alt={memeImg.name} ></img>\n\n            </div>\n\n        </main >\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;EAChD,IAAIC,UAAU,GAAGF,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;EAGtD,IAAI,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAG9C,IAAIC,MAAM,GAAGA,CAAA,KAAM;IAEf,IAAIC,IAAI,GAAGb,SAAS;IACpBc,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIG,UAAU,GAAGC,IAAI,CAACC,KAAK,EAAE;EAEjC,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,gBAEIjB,OAAA;MAAMkB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAClBjB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,eACFxB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACPxB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BjB,OAAA;QAAQyB,OAAO,EAAEf,MAAO;QACpBQ,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTxB,OAAA;QAAKkB,SAAS,EAAC,SAAS;QAACQ,GAAG,EAAEnB,OAAO,CAACoB,GAAI;QAACC,GAAG,EAAErB,OAAO,CAACsB;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEhB;AAACtB,EAAA,CA5CuBD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}