{"ast":null,"code":"var _jsxFileName = \"/home/david/repos/React/react1/src/pages/4/Main.js\",\n  _s = $RefreshSig$();\nimport React, { createElement } from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let toptext = document.querySelector(\".toptext\");\n  let bottomtext = document.querySelector(\".bottomtext\");\n  let [memeImg, setMemeImg] = React.useState(\"\");\n\n  /*   let button = (prevSetMemeImg) => {\n        setMemeImg(function () {\n            let momse = memesData.data.memes\n            const randomIndex = Math.floor(Math.random() * momse.length)\n            const randomMeme = momse[randomIndex];\n            let prevSetMemeImg = <img src={randomMeme.url} className=\"h1\"></img>\n            console.log(prevSetMemeImg)\n        })\n  }*/\n  let button1 = () => {\n    setMemeImg(prevSetMemeImg => {\n      let momse = memesData.data.memes;\n      const randomIndex = Math.floor(Math.random() * momse.length);\n      const randomMeme = momse[randomIndex];\n      let img = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: randomMeme.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this);\n      console.log(img.props);\n      console.log(prevSetMemeImg);\n    });\n  };\n  let [count, setCount] = React.useState(1);\n  let button = () => {\n    setCount(prevSetCount => prevSetCount + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"toptext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"bottomtext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button1,\n        children: \"dsdsa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"ErkWavH1pREM8/NV88P5R60qNig=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","createElement","memesData","jsxDEV","_jsxDEV","Main","_s","toptext","document","querySelector","bottomtext","memeImg","setMemeImg","useState","button1","prevSetMemeImg","momse","data","memes","randomIndex","Math","floor","random","length","randomMeme","img","src","url","fileName","_jsxFileName","lineNumber","columnNumber","console","log","props","count","setCount","button","prevSetCount","children","className","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/david/repos/React/react1/src/pages/4/Main.js"],"sourcesContent":["import React, { createElement } from \"react\"\nimport memesData from \"./memesData\"\n\n\nexport default function Main() {\n\n    let toptext = document.querySelector(\".toptext\")\n    let bottomtext = document.querySelector(\".bottomtext\")\n\n\n    let [memeImg, setMemeImg] = React.useState(\"\")\n\n\n\n\n    /*   let button = (prevSetMemeImg) => {\n          setMemeImg(function () {\n              let momse = memesData.data.memes\n              const randomIndex = Math.floor(Math.random() * momse.length)\n              const randomMeme = momse[randomIndex];\n              let prevSetMemeImg = <img src={randomMeme.url} className=\"h1\"></img>\n              console.log(prevSetMemeImg)\n          })\n \n\n}*/\n    let button1 = () => {\n\n        setMemeImg(prevSetMemeImg => {\n            let momse = memesData.data.memes\n            const randomIndex = Math.floor(Math.random() * momse.length)\n            const randomMeme = momse[randomIndex];\n            let img = <img src={randomMeme.url}></img>\n            console.log(img.props)\n            console.log(prevSetMemeImg)\n\n        })\n    }\n    let [count, setCount] = React.useState(1)\n    let button = () => {\n        setCount(prevSetCount => prevSetCount + 1)\n\n\n    }\n    return (\n        <main>\n\n            <form className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"toptext\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"bottomtext\"\n                />\n            </form>\n            <div className=\"img-container\">\n                <button onClick={button}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n                <button onClick={button1}>dsdsa</button>\n                <h1>{count}</h1>\n            </div>\n\n        </main>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}