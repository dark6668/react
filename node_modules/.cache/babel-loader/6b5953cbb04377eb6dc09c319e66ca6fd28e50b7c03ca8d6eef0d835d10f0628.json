{"ast":null,"code":"var _jsxFileName = \"/home/david/repos/React/react1/src/pages/4/Main.js\",\n  _s = $RefreshSig$();\nimport React, { createElement } from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let [memeImg, setMemeImg] = React.useState({\n    toptext: \"\",\n    bootmtext: \"\",\n    randdomImge: \"https://i.imgflip.com/1bij.jpg\"\n  });\n  let [memeData, setMemeData] = React.useState(memesData);\n  let button = () => {\n    setMemeData(prevSetMemeData => {});\n    let randomNumber = Math.floor(Math.random(meme) * meme.length);\n    let randomMeme = meme[randomNumber];\n    setMemeData(prevSetMemeData => prevSetMemeData = randomMeme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"toptext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"bottomtext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"memeImg\",\n        src: memeImg.url,\n        alt: memeImg.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"izltiJxNxRRLnNHF4+pslQovFUk=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","createElement","memesData","jsxDEV","_jsxDEV","Main","_s","memeImg","setMemeImg","useState","toptext","bootmtext","randdomImge","memeData","setMemeData","button","prevSetMemeData","randomNumber","Math","floor","random","meme","length","randomMeme","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","url","alt","name","_c","$RefreshReg$"],"sources":["/home/david/repos/React/react1/src/pages/4/Main.js"],"sourcesContent":["import React, { createElement } from \"react\"\nimport memesData from \"./memesData\"\n\n\nexport default function Main() {\n\n\n\n\n    let [memeImg, setMemeImg] = React.useState({\n        toptext: \"\", bootmtext: \"\", randdomImge: \"https://i.imgflip.com/1bij.jpg\"\n    })\n    let [memeData, setMemeData] = React.useState(memesData)\n\n    let button = () => {\n\n        setMemeData(prevSetMemeData => {\n\n\n        })\n\n\n        let randomNumber = Math.floor(Math.random(meme) * meme.length)\n        let randomMeme = meme[randomNumber]\n\n        setMemeData(prevSetMemeData => prevSetMemeData = randomMeme)\n\n    }\n\n    return (\n        <main>\n\n            <form className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"toptext\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"bottomtext\"\n                />\n            </form>\n            <div className=\"img-container\">\n                <button onClick={button}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n                <img className=\"memeImg\" src={memeImg.url} alt={memeImg.name} ></img>\n\n            </div>\n\n        </main >\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAK3B,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC;IACvCC,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,WAAW,EAAE;EAC7C,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,KAAK,CAACS,QAAQ,CAACP,SAAS,CAAC;EAEvD,IAAIa,MAAM,GAAGA,CAAA,KAAM;IAEfD,WAAW,CAACE,eAAe,IAAI,CAG/B,CAAC,CAAC;IAGF,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC,GAAGA,IAAI,CAACC,MAAM,CAAC;IAC9D,IAAIC,UAAU,GAAGF,IAAI,CAACJ,YAAY,CAAC;IAEnCH,WAAW,CAACE,eAAe,IAAIA,eAAe,GAAGO,UAAU,CAAC;EAEhE,CAAC;EAED,oBACInB,OAAA;IAAAoB,QAAA,gBAEIpB,OAAA;MAAMqB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAClBpB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,eACF3B,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACP3B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BpB,OAAA;QAAQ4B,OAAO,EAAEjB,MAAO;QACpBU,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT3B,OAAA;QAAKqB,SAAS,EAAC,SAAS;QAACQ,GAAG,EAAE1B,OAAO,CAAC2B,GAAI;QAACC,GAAG,EAAE5B,OAAO,CAAC6B;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEhB;AAACzB,EAAA,CApDuBD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}