{"ast":null,"code":"var _jsxFileName = \"/home/david/repos/React/react1/src/pages/4/Main.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let [memes, setMemes] = React.useState({\n    toptext: \"\",\n    bootmtext: \"\",\n    randdomImge: \"https://i.imgflip.com/1bij.jpg\"\n  });\n  let [allmemesImg, setAllmemesImg] = React.useState(memesData);\n  let button = () => {\n    let meme = allmemesImg.data.memes;\n    let randomNumber = Math.floor(Math.random(meme) * meme.length);\n    let randomMeme = meme[randomNumber];\n    let url = randomMeme.url;\n    setMemes(prevSetMemes => ({\n      ...prevSetMemes,\n      randomMeme: url\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"toptext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"bottomtext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: button,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"memeImg\",\n        src: memes,\n        alt: memes.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"TnJS9S25pHRLNdZ50dZmhFf9Vks=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Main","_s","memes","setMemes","useState","toptext","bootmtext","randdomImge","allmemesImg","setAllmemesImg","button","meme","data","randomNumber","Math","floor","random","length","randomMeme","url","prevSetMemes","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","name","_c","$RefreshReg$"],"sources":["/home/david/repos/React/react1/src/pages/4/Main.js"],"sourcesContent":["import React from \"react\"\nimport memesData from \"./memesData\"\n\n\nexport default function Main() {\n    let [memes, setMemes] = React.useState({\n        toptext: \"\", bootmtext: \"\", randdomImge: \"https://i.imgflip.com/1bij.jpg\"\n    })\n    let [allmemesImg, setAllmemesImg] = React.useState(memesData)\n\n    let button = () => {\n\n\n        let meme = allmemesImg.data.memes\n        let randomNumber = Math.floor(Math.random(meme) * meme.length)\n        let randomMeme = meme[randomNumber]\n        let url = randomMeme.url\n\n\n        setMemes(prevSetMemes => ({\n            ...prevSetMemes,\n            randomMeme: url\n\n\n\n        }))\n\n\n\n\n\n    }\n\n    return (\n        <main>\n\n            <form className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"toptext\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"bottomtext\"\n                />\n            </form>\n            <div className=\"img-container\">\n                <button onClick={button}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n                <img className=\"memeImg\" src={memes} alt={memes.name} ></img>\n\n            </div>\n\n        </main >\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,WAAW,EAAE;EAC7C,CAAC,CAAC;EACF,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,KAAK,CAACQ,QAAQ,CAACP,SAAS,CAAC;EAE7D,IAAIa,MAAM,GAAGA,CAAA,KAAM;IAGf,IAAIC,IAAI,GAAGH,WAAW,CAACI,IAAI,CAACV,KAAK;IACjC,IAAIW,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAACL,IAAI,CAAC,GAAGA,IAAI,CAACM,MAAM,CAAC;IAC9D,IAAIC,UAAU,GAAGP,IAAI,CAACE,YAAY,CAAC;IACnC,IAAIM,GAAG,GAAGD,UAAU,CAACC,GAAG;IAGxBhB,QAAQ,CAACiB,YAAY,KAAK;MACtB,GAAGA,YAAY;MACfF,UAAU,EAAEC;IAIhB,CAAC,CAAC,CAAC;EAMP,CAAC;EAED,oBACIpB,OAAA;IAAAsB,QAAA,gBAEItB,OAAA;MAAMuB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAClBtB,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,eACF7B,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACP7B,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BtB,OAAA;QAAQ8B,OAAO,EAAEnB,MAAO;QACpBY,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT7B,OAAA;QAAKuB,SAAS,EAAC,SAAS;QAACQ,GAAG,EAAE5B,KAAM;QAAC6B,GAAG,EAAE7B,KAAK,CAAC8B;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEhB;AAAC3B,EAAA,CAxDuBD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}